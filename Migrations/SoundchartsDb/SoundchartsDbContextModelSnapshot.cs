// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mu_marketplaceV0.Models;

#nullable disable

namespace mu_marketplaceV0.Migrations.SoundchartsDb
{
    [DbContext(typeof(SoundchartsDbContext))]
    partial class SoundchartsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mu_marketplaceV0.Models.SC_GETSONG", b =>
                {
                    b.Property<Guid>("uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Explicit")
                        .HasColumnType("bit")
                        .HasColumnName("explicit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("app_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("artists_json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("audio_acousticness")
                        .HasColumnType("float");

                    b.Property<double?>("audio_danceability")
                        .HasColumnType("float");

                    b.Property<double?>("audio_energy")
                        .HasColumnType("float");

                    b.Property<double?>("audio_instrumentalness")
                        .HasColumnType("float");

                    b.Property<int?>("audio_key")
                        .HasColumnType("int");

                    b.Property<double?>("audio_liveness")
                        .HasColumnType("float");

                    b.Property<double?>("audio_loudness")
                        .HasColumnType("float");

                    b.Property<int?>("audio_mode")
                        .HasColumnType("int");

                    b.Property<double?>("audio_speechiness")
                        .HasColumnType("float");

                    b.Property<double?>("audio_tempo")
                        .HasColumnType("float");

                    b.Property<int?>("audio_time_signature")
                        .HasColumnType("int");

                    b.Property<double?>("audio_valence")
                        .HasColumnType("float");

                    b.Property<string>("composers_json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("copyright")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("credit_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distributor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("duration")
                        .HasColumnType("int");

                    b.Property<string>("errors_json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genres_json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isrc_country_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isrc_country_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isrc_value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("labels_json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("language_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("last_synced")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("producers_json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("release_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("uuid");

                    b.ToTable("SC_GETSONG");
                });

            modelBuilder.Entity("mu_marketplaceV0.Models.Song", b =>
                {
                    b.Property<int>("song_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("song_id"));

                    b.Property<bool?>("Explicit")
                        .HasColumnType("bit")
                        .HasColumnName("explicit");

                    b.Property<string>("app_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("artist_app_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("artist_image_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("artist_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("artist_slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("artist_uuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("audio_acousticness")
                        .HasColumnType("float");

                    b.Property<double?>("audio_danceability")
                        .HasColumnType("float");

                    b.Property<double?>("audio_energy")
                        .HasColumnType("float");

                    b.Property<double?>("audio_instrumentalness")
                        .HasColumnType("float");

                    b.Property<int?>("audio_key")
                        .HasColumnType("int");

                    b.Property<double?>("audio_liveness")
                        .HasColumnType("float");

                    b.Property<double?>("audio_loudness")
                        .HasColumnType("float");

                    b.Property<int?>("audio_mode")
                        .HasColumnType("int");

                    b.Property<double?>("audio_speechiness")
                        .HasColumnType("float");

                    b.Property<double?>("audio_tempo")
                        .HasColumnType("float");

                    b.Property<int?>("audio_time_signature")
                        .HasColumnType("int");

                    b.Property<double?>("audio_valence")
                        .HasColumnType("float");

                    b.Property<string>("composers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("credit_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("distributor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("duration")
                        .HasColumnType("int");

                    b.Property<string>("genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isrc_country_code")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("isrc_country_name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("isrc_value")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("labels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("language_code")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("producers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("release_date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("song_id");

                    b.HasIndex("uuid")
                        .IsUnique();

                    b.ToTable("songs");
                });
#pragma warning restore 612, 618
        }
    }
}
